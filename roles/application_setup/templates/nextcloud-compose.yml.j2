version: "3.4"

services:
  database:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./database:/var/lib/mysql
    user: 1000:1000
  redis:
    image: redis
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./redis:/data
    user: 1000:1000
  nextcloud:
    # explicitly use docker hub image
    image: nextcloud:apache
    restart: unless-stopped
    env_file: .env
    # setting  net.ipv4.ip_unprivileged_port_start to 0 is required for port 80
    # see https://docs.nextcloud.com/server/12/admin_manual/installation/docker.html#port-80
    # for more information
    cap_add:
      - NET_BIND_SERVICE
    depends_on:
      - database
      - redis
    volumes:
      # Uncomment and specify your data directory (if you have a mounted hard drive)
      # !! ALWAYS make a backup of your data before such manipulations !!
      - ./data:/var/www/html/data
      - /opt/nextcloud/nextcloud_html:/var/www/html:z
      - /opt/nextcloud/mnt:/mnt
      - /opt/nextcloud/.redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini:z
      # Extensions
    ports:
      - "0.0.0.0:8080:80"
    # Map www-data container user to your user on the host
    # (see https://docs.nextcloud.com/server/12/admin_manual/installation/docker.html#user-group-ids
    # for more information)
    # Make internal www-data user use nextcloud user id on the host
    user: "1001:1001"
    # Uid map
    # Make internal www-data user use nextcloud user id on the host

  onlyoffice-documentserver:
    image: docker.io/onlyoffice/documentserver
    depends_on:
      - onlyoffice-postgresql
      - onlyoffice-rabbitmq
    environment:
      - DB_TYPE=postgres
      - DB_HOST=onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=onlyoffice
      - DB_USER=onlyoffice
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      # Uncomment strings below to enable the JSON Web Token validation.
      - JWT_ENABLED=true
      - JWT_SECRET=${ONLYOFFICE_JWT_SECRET}
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
    ports:
      - "8082:80"
    stdin_open: false
    restart: always
    stop_grace_period: 60s
    volumes:
       - ./onlyoffice/data:/var/www/onlyoffice/Data:z
       #- /var/log/onlyoffice
       - ./onlyoffice/files:/var/lib/onlyoffice/documentserver/App_Data/cache/files:z
       - ./onlyoffice/files-example:/var/www/onlyoffice/documentserver-example/public/files:z
       - ./onlyoffice/fonts/:/usr/share/fonts:z
       
  onlyoffice-rabbitmq:
    container_name: onlyoffice-rabbitmq
    image: rabbitmq
    restart: always

  onlyoffice-postgresql:
    container_name: onlyoffice-postgresql
    image: postgres:12
    environment:
      - POSTGRES_DB=onlyoffice
      - POSTGRES_USER=onlyoffice
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: always
    volumes:
      - ./onlyoffice/database:/var/lib/postgresql/data:z
  crablendar:
    image: docker.io/lpicode/crablendar:latest
    env_file: .env
    ports:
      - "0.0.0.0:8081:8080"