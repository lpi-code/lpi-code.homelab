- name: Set the user to create
  set_fact:
    user_to_setup: authentik

- name: Setup authentik user
  include_tasks: setup_user.yml

- name: Setting service information
  set_fact:
    service:
      description: The authentik SSO used by all other services
      userhome: /opt/authentik
      username: authentik
      usergroup: authentik
      uid: "{{ created_user.uid }}"

- name: Set registered
  set_fact:
    authentik_user: "{{ created_user }}"

- name: Create /opt/authentik
  file:
    path: /opt/authentik
    state: directory
    owner: authentik
    group: authentik
    mode: 0755

- name: Checking if authentik password is set
  fail:
    msg: "authentik_password is not set"
  when: authentik_password is not defined

- name: Check if authentik .env exist
  stat:
    path: /opt/authentik/.env
  register: authentik_env

- name: Set authentik_db_exists fact
  set_fact:
    authentik_db_exists: "{{ authentik_env.stat.exists }}"

- name: Get db password from env file
  shell: "grep PG_PASS /opt/authentik/.env | cut -d '=' -f 2"
  register: authentik_db_password
  changed_when: false
  when: authentik_db_exists

- name: Get authentik secret key from env
  shell: "grep PG_PASS /opt/authentik/.env | cut -d '=' -f 2"
  register: authentik_secret_key
  changed_when: false
  when: authentik_db_exists

- name: Set authentik_db_password and authentik_secret_key facts
  set_fact:
    authentik_db_password: "{{ authentik_db_password.stdout }}"
    authentik_secret_key: "{{ authentik_secret_key.stdout }}"
  when: authentik_db_exists

- name: Generating authentik password
  set_fact:
    authentik_secret_key: "{{ lookup('password', '/dev/null length=50 chars=ascii_letters,digits') }}"
    authentik_db_password: "{{ lookup('password', '/dev/null length=40 chars=ascii_letters,digits') }}"
  when: authentik_db_exists == false

- name: Templating authentik .env
  template:
    src: authentik.env.j2
    dest: /opt/authentik/.env
    owner: authentik
    group: authentik
    mode: 0600

- name: Templating authentik compose file
  template:
    src: authentik-compose.yml.j2
    dest: /opt/authentik/docker-compose.yml
    owner: authentik
    group: authentik
    mode: 0644

- name: Template authentik service
  template:
    src: generic_compose.service.j2
    dest: /etc/systemd/system/authentik.service
    owner: root
    group: root
    mode: 0644
  notify: Reload systemd

- meta: flush_handlers

- name: Enable authentik service and start it
  systemd:
    name: authentik
    enabled: yes
    state: restarted
    daemon_reload: yes

- name: Remove AUTHENTIK_BOOTSTRAP_PASSWORD from .env line
  lineinfile:
    path: /opt/authentik/.env
    regexp: '^AUTHENTIK_BOOTSTRAP_PASSWORD='
    line: 'AUTHENTIK_BOOTSTRAP_PASSWORD='
    state: absent
  when: authentik_db_exists == false